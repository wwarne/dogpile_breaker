[project]
name = "dogpile_breaker"
version = "0.11.0"
description = "Cache for Asyncio Applications with Anti-Dogpile Effect"
readme = "README.md"
authors = [
    { name = "Dmitry P.", email = "wwarne@gmail.com" }
]

requires-python = ">=3.10"
dependencies = [
    "async-timeout>=5.0.1 ; python_full_version < '3.11.3'",
    "redis>=5.1",
    "typing-extensions>=4.12.2",
]

[project.urls]
"Source" = "https://github.com/wwarne/dogpile_breaker/"

[project.optional-dependencies]
metrics = [
    "prometheus-client>=0.21.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "mypy>=1.13.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.3",
    "ruff>=0.8.3",
]

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D", # no-blank-line-before-class
    "COM812",
    "ISC001",
    "PLR0913", #  Too many arguments in function definition
    "FIX002",
    "TD003",
    "TD002",
    "ANN401",
    "T201",
]
[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "ANN",  # annotations
    "S101",  # Use of `assert` detected
    "EM101",  # Exception must not use a string literal
    "TRY003",  # Avoid pecifying long messages outside the exception class
    "PLR2004",  # Magic value used in comparison
    "SLF001",  # Private member accessed
    "S311",  # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.mypy]
# mypy configurations: http://bit.ly/2zEl9WI
enable_error_code = [
  "truthy-bool",
  "truthy-iterable",
  "redundant-expr",
  "unused-awaitable",
  "ignore-without-code",
  "possibly-undefined",
  "redundant-self",
]

strict = true
warn_unreachable = true

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
asyncio_mode = "strict"
